// Before: create a variable named 'counter' that counts calls to insert. Initialize 'counter' to 0.

createBST(int[] keys) {
    set the value of counter to 0

    for each (key in keys) {
        if (tree has a root node) {    
            insert(root, key)
        } 
        else {
            create a new node with value 'key' as the root node of tree
        }

        print the value of 'counter' on a new line
    }
}

insert(root, key) {
    increment the value of counter by 1

    if (key is less than the value of root node) {
        if (root node has no left child) {
            create a new node with value 'key' as the left child of root node
        } 
        else {
            insert(left child of root node, key)
        }
    } 
    else {
        if (root node has no right child) {
            create a new node with value 'key' as the right child of root node
        } 
        else {
            insert(right child of root node, key)
        }
    }
}